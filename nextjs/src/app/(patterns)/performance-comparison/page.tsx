'use client'

import { useState } from 'react'
import { ContentVisibilityList } from '@/features/performance-comparison/components/ContentVisibilityList'
import { WindowedList } from '@/features/performance-comparison/components/WindowedList'
import { Select } from '@/features/shared/components/select'
import { Tabs } from '@/features/shared/components/tabs'
import type { SelectOption } from '@/features/shared/types'
import { NoOptimizationList } from '../../../features/performance-comparison/components/NoOptimizationList'
import { UsageGuide } from '../../../features/performance-comparison/components/UsageGuide'

type TabType = 'windowing' | 'content-visibility' | 'no-optimization'

const TABS = [
  {
    id: 'windowing',
    label: 'Windowing Technique',
    description:
      'Virtual scrolling implementation - Best performance for large datasets',
  },
  {
    id: 'content-visibility',
    label: 'CSS Content-Visibility',
    description:
      'Uses content-visibility: auto - Good performance optimization',
  },
  {
    id: 'no-optimization',
    label: 'No Optimization',
    description: 'Renders all items at once - Poor performance reference',
  },
] as const

const ITEM_COUNT_OPTIONS: SelectOption[] = [
  { value: 100, label: '100 Items' },
  { value: 1000, label: '1,000 Items' },
  { value: 10000, label: '10,000 Items' },
  { value: 50000, label: '50,000 Items' },
]

// Generated by Copilot
export default function PerformanceComparisonPage() {
  const [activeTab, setActiveTab] = useState<TabType>('windowing')
  const [itemCount, setItemCount] = useState<number>(10000)

  return (
    <div className="min-h-screen bg-background p-4">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-foreground mb-4">
            Performance Optimization Comparison
          </h1>
          <p className="text-gray-600 text-lg">
            Compare different techniques for handling large lists: Windowing vs
            CSS content-visibility vs No optimization
          </p>
        </div>

        {/* Controls */}
        <div className="mb-6 flex flex-col sm:flex-row gap-4 items-start sm:items-end">
          <div className="flex-1">
            <Select
              label="List Size"
              options={ITEM_COUNT_OPTIONS}
              value={itemCount}
              onChange={e => setItemCount(Number(e.target.value))}
              helperText="Choose the number of items to render"
            />
          </div>
          <div className="text-sm text-gray-600 bg-gray-50 px-3 py-2 rounded-lg">
            <span className="font-medium">Performance Impact:</span>{' '}
            {itemCount <= 1000 ? (
              <span className="text-green-600">Low</span>
            ) : itemCount <= 10000 ? (
              <span className="text-yellow-600">Medium</span>
            ) : (
              <span className="text-red-600">High</span>
            )}
          </div>
        </div>

        {/* Tabs */}
        <Tabs
          tabs={TABS}
          activeTab={activeTab}
          onTabChange={tabId => setActiveTab(tabId as TabType)}
        >
          {/* Performance Metrics */}
          <div className="mb-6 grid grid-cols-1 md:grid-cols-4 gap-4">
            <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
              <h4 className="font-semibold text-gray-900 mb-2">Total Items</h4>
              <p className="text-2xl font-bold text-blue-600">
                {itemCount.toLocaleString()}
              </p>
            </div>
            <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
              <h4 className="font-semibold text-gray-900 mb-2">
                Current Technique
              </h4>
              <p className="text-lg font-medium text-purple-600">
                {TABS.find(tab => tab.id === activeTab)?.label}
              </p>
            </div>
            <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
              <h4 className="font-semibold text-gray-900 mb-2">
                Expected Performance
              </h4>
              <p className="text-lg font-medium">
                {activeTab === 'windowing' && (
                  <span className="text-green-600">Excellent üöÄ</span>
                )}
                {activeTab === 'content-visibility' && (
                  <span className="text-yellow-600">Good ‚ö°</span>
                )}
                {activeTab === 'no-optimization' && (
                  <span className="text-red-600">Poor ‚ö†Ô∏è</span>
                )}
              </p>
            </div>
            <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
              <h4 className="font-semibold text-gray-900 mb-2">
                Memory Impact
              </h4>
              <p className="text-lg font-medium">
                {activeTab === 'windowing' && (
                  <span className="text-green-600">Low</span>
                )}
                {activeTab === 'content-visibility' && (
                  <span className="text-yellow-600">Medium</span>
                )}
                {activeTab === 'no-optimization' && (
                  <span className="text-red-600">High</span>
                )}
              </p>
            </div>
          </div>

          {/* Performance Tips */}
          <div className="mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <h4 className="font-semibold text-blue-900 mb-2">
              üí° How It Works
            </h4>
            <div className="text-blue-800 text-sm">
              {activeTab === 'windowing' && (
                <div>
                  <p className="mb-3">
                    <strong>Technique:</strong> Virtual scrolling - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞
                    render ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ items ‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ‡πÉ‡∏ô viewport (~20-30 items)
                    ‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏•‡∏≠‡∏á scroll height
                  </p>

                  <div className="mb-3 p-3 bg-white rounded border border-blue-100">
                    <h5 className="font-semibold text-blue-900 mb-2">
                      üî¢ ‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Windowing:
                    </h5>
                    <div className="space-y-2 text-xs font-mono">
                      <div>
                        <strong>1. ‡∏´‡∏≤ Start Index:</strong>
                        <br />
                        <code className="bg-gray-100 px-2 py-1 rounded">
                          startIndex = Math.max(0, Math.floor(scrollTop /
                          ITEM_HEIGHT) - OVERSCAN)
                        </code>
                      </div>
                      <div>
                        <strong>2. ‡∏´‡∏≤ End Index:</strong>
                        <br />
                        <code className="bg-gray-100 px-2 py-1 rounded">
                          endIndex = Math.min(totalItems - 1,
                          Math.floor((scrollTop + containerHeight) /
                          ITEM_HEIGHT) + OVERSCAN)
                        </code>
                      </div>
                      <div>
                        <strong>3. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Total Height:</strong>
                        <br />
                        <code className="bg-gray-100 px-2 py-1 rounded">
                          totalHeight = totalItems √ó ITEM_HEIGHT
                        </code>
                      </div>
                      <div>
                        <strong>4. ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Offset Position:</strong>
                        <br />
                        <code className="bg-gray-100 px-2 py-1 rounded">
                          offsetY = startIndex √ó ITEM_HEIGHT
                        </code>
                      </div>
                    </div>
                  </div>

                  <div className="mb-3 p-3 bg-white rounded border border-blue-100">
                    <h5 className="font-semibold text-blue-900 mb-2">
                      üìä ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:
                    </h5>
                    <div className="grid grid-cols-2 gap-2 text-xs">
                      <div>
                        <strong>ITEM_HEIGHT:</strong> 120px
                      </div>
                      <div>
                        <strong>CONTAINER_HEIGHT:</strong> 384px
                      </div>
                      <div>
                        <strong>OVERSCAN:</strong> 5 items
                      </div>
                      <div>
                        <strong>Visible Items:</strong> ~3-4 items
                      </div>
                    </div>
                  </div>

                  <p className="mb-2">
                    <strong>Impact:</strong> ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î DOM, ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ memory
                    ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á browser ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô items ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                  </p>
                  <p>
                    <strong>Result:</strong> Performance ‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ 100 ‡∏´‡∏£‡∏∑‡∏≠
                    100,000 items ‡∏Å‡πá‡∏ï‡∏≤‡∏°
                  </p>
                </div>
              )}
              {activeTab === 'content-visibility' && (
                <div>
                  <p className="mb-2">
                    <strong>Technique:</strong> Uses CSS{' '}
                    <code className="bg-white px-1 rounded">
                      content-visibility: auto
                    </code>{' '}
                    to skip rendering off-screen elements.
                  </p>
                  <p className="mb-2">
                    <strong>Impact:</strong> Browser skips layout and paint for
                    elements not in viewport, but elements still exist in DOM.
                  </p>
                  <p>
                    <strong>Result:</strong> Better performance than no
                    optimization, especially for long lists with complex
                    content.
                  </p>
                </div>
              )}
              {activeTab === 'no-optimization' && (
                <div>
                  <p className="mb-2">
                    <strong>Technique:</strong> Renders all{' '}
                    {itemCount.toLocaleString()} items directly in the DOM
                    without any optimization.
                  </p>
                  <p className="mb-2">
                    <strong>Impact:</strong> Browser struggles with layout
                    calculations, painting, and event handling for thousands of
                    elements.
                  </p>
                  <p>
                    <strong>Result:</strong> Slow scrolling, high memory usage,
                    and poor user experience.
                  </p>
                </div>
              )}
            </div>
          </div>

          {/* Content */}
          <div className="bg-white rounded-lg border border-gray-200 shadow-sm">
            {activeTab === 'windowing' && (
              <WindowedList itemCount={itemCount} />
            )}
            {activeTab === 'content-visibility' && (
              <ContentVisibilityList itemCount={itemCount} />
            )}
            {activeTab === 'no-optimization' && (
              <NoOptimizationList itemCount={itemCount} />
            )}
          </div>

          {/* Usage Guide */}
          <UsageGuide activeTab={activeTab} />

          {/* Detailed Windowing Explanation */}
          {activeTab === 'windowing' && (
            <div className="mt-6 bg-gradient-to-br from-blue-50 to-indigo-50 rounded-lg border border-blue-200 p-6">
              <h3 className="text-xl font-bold text-blue-900 mb-4">
                üßÆ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Windowing Technique ‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
              </h3>

              <div className="grid md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold text-blue-800 mb-3">
                    üìê ‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
                  </h4>
                  <div className="space-y-3 text-sm">
                    <div className="p-3 bg-white rounded border border-blue-100">
                      <strong className="text-blue-700">
                        Step 1: ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Visible Range
                      </strong>
                      <p className="mt-1 text-gray-700">
                        ‡πÉ‡∏ä‡πâ position ‡∏Ç‡∏≠‡∏á scroll ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á container ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏ß‡πà‡∏≤
                        items ‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô
                      </p>
                      <code className="block mt-2 text-xs bg-gray-100 p-2 rounded">
                        visibleStart = scrollTop √∑ itemHeight
                        <br />
                        visibleEnd = (scrollTop + containerHeight) √∑ itemHeight
                      </code>
                    </div>

                    <div className="p-3 bg-white rounded border border-blue-100">
                      <strong className="text-blue-700">
                        Step 2: ‡πÄ‡∏û‡∏¥‡πà‡∏° Overscan Buffer
                      </strong>
                      <p className="mt-1 text-gray-700">
                        ‡πÄ‡∏û‡∏¥‡πà‡∏° items ‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏±‡∏á visible range ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£ scroll ‡∏ó‡∏µ‡πà
                        smooth
                      </p>
                      <code className="block mt-2 text-xs bg-gray-100 p-2 rounded">
                        startIndex = visibleStart - OVERSCAN
                        <br />
                        endIndex = visibleEnd + OVERSCAN
                      </code>
                    </div>

                    <div className="p-3 bg-white rounded border border-blue-100">
                      <strong className="text-blue-700">
                        Step 3: ‡∏à‡∏≥‡∏•‡∏≠‡∏á Total Height
                      </strong>
                      <p className="mt-1 text-gray-700">
                        ‡∏™‡∏£‡πâ‡∏≤‡∏á container ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö items ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ scrollbar
                        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥
                      </p>
                      <code className="block mt-2 text-xs bg-gray-100 p-2 rounded">
                        totalHeight = totalItems √ó itemHeight
                      </code>
                    </div>
                  </div>
                </div>

                <div>
                  <h4 className="font-semibold text-blue-800 mb-3">
                    ‚ö° ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ô‡∏µ‡πâ
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex items-start gap-2">
                      <span className="text-green-600 mt-0.5">‚úÖ</span>
                      <div>
                        <strong>Memory Efficient:</strong> ‡πÉ‡∏ä‡πâ memory ‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ
                        items ‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà
                      </div>
                    </div>
                    <div className="flex items-start gap-2">
                      <span className="text-green-600 mt-0.5">‚úÖ</span>
                      <div>
                        <strong>Fast Rendering:</strong> Browser render ‡πÄ‡∏â‡∏û‡∏≤‡∏∞
                        items ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                      </div>
                    </div>
                    <div className="flex items-start gap-2">
                      <span className="text-green-600 mt-0.5">‚úÖ</span>
                      <div>
                        <strong>Smooth Scrolling:</strong> Overscan buffer ‡∏ó‡∏≥‡πÉ‡∏´‡πâ
                        scroll ‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡∏Å
                      </div>
                    </div>
                    <div className="flex items-start gap-2">
                      <span className="text-green-600 mt-0.5">‚úÖ</span>
                      <div>
                        <strong>Scalable:</strong> Performance ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏°‡πâ data
                        ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô
                      </div>
                    </div>
                  </div>

                  <h4 className="font-semibold text-blue-800 mb-3 mt-4">
                    üéØ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ
                  </h4>
                  <div className="space-y-2 text-sm">
                    <div className="flex items-start gap-2">
                      <span className="text-blue-600 mt-0.5">üí°</span>
                      <div>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ items ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 100+ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>
                    </div>
                    <div className="flex items-start gap-2">
                      <span className="text-blue-600 mt-0.5">üí°</span>
                      <div>Items ‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ñ‡∏á‡∏ó‡∏µ‡πà (Fixed Height)</div>
                    </div>
                    <div className="flex items-start gap-2">
                      <span className="text-blue-600 mt-0.5">üí°</span>
                      <div>‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ performance ‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡πÅ‡∏•‡∏∞‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß</div>
                    </div>
                  </div>
                </div>
              </div>

              <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                <h5 className="font-semibold text-yellow-800 mb-2">
                  ‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á
                </h5>
                <ul className="text-sm text-yellow-700 space-y-1">
                  <li>‚Ä¢ Items ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ñ‡∏á‡∏ó‡∏µ‡πà (ITEM_HEIGHT) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>
                  <li>
                    ‚Ä¢ ‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ scroll event ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û (‡πÉ‡∏ä‡πâ useCallback)
                  </li>
                  <li>
                    ‚Ä¢ OVERSCAN ‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡∏à‡∏∞‡∏•‡∏î performance, ‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ scroll
                    ‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡∏Å
                  </li>
                </ul>
              </div>
            </div>
          )}
        </Tabs>
      </div>
    </div>
  )
}
