'use client'

interface UsageGuideProps {
  activeTab: string
}

// Generated by Copilot
export const UsageGuide = ({ activeTab }: UsageGuideProps) => {
  const getRecommendations = () => {
    switch (activeTab) {
      case 'no-optimization':
        return {
          title: 'When to Use (Almost Never)',
          scenarios: [
            'Small lists with less than 100 items',
            "Static content that doesn't change",
            'Quick prototyping or demos',
          ],
          avoid: [
            'Large datasets (1000+ items)',
            'Complex item templates',
            'Mobile applications',
            'Production applications with performance requirements',
          ],
        }

      case 'content-visibility':
        return {
          title: 'When to Use CSS Content-Visibility',
          scenarios: [
            'Medium to large lists (100-5000 items)',
            'Complex item layouts with images/media',
            "When you can't implement virtual scrolling",
            'Progressive enhancement of existing lists',
          ],
          avoid: [
            'Very large datasets (100,000+ items)',
            'Simple item templates (use windowing instead)',
            'When you need precise control over rendering',
          ],
        }

      case 'windowing':
        return {
          title: 'When to Use Virtual Scrolling',
          scenarios: [
            'Very large datasets (1000+ items)',
            'Data tables and grids',
            'Chat applications with long histories',
            'File explorers and directory listings',
            'Any performance-critical list rendering',
          ],
          avoid: [
            'Small lists (overhead not worth it)',
            'Lists with variable item heights (complex to implement)',
            'When items need to maintain state across scroll',
          ],
        }

      default:
        return { title: '', scenarios: [], avoid: [] }
    }
  }

  const recommendations = getRecommendations()

  if (!recommendations.title) return null

  return (
    <div className="mt-6 p-4 bg-gray-50 rounded-lg border border-gray-200">
      <h4 className="font-semibold text-gray-900 mb-3">
        {recommendations.title}
      </h4>

      <div className="grid md:grid-cols-2 gap-4">
        <div>
          <h5 className="font-medium text-green-900 mb-2 flex items-center">
            ✅ Good for:
          </h5>
          <ul className="text-sm text-gray-700 space-y-1">
            {recommendations.scenarios.map((scenario, index) => (
              <li key={index} className="flex items-start">
                <span className="text-green-600 mr-2">•</span>
                {scenario}
              </li>
            ))}
          </ul>
        </div>

        <div>
          <h5 className="font-medium text-red-900 mb-2 flex items-center">
            ❌ Avoid when:
          </h5>
          <ul className="text-sm text-gray-700 space-y-1">
            {recommendations.avoid.map((scenario, index) => (
              <li key={index} className="flex items-start">
                <span className="text-red-600 mr-2">•</span>
                {scenario}
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  )
}
