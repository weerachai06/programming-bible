"use client";

import { cva, VariantProps } from "class-variance-authority";
import { ComponentProps } from "react";

export const selectVariants = cva(
  "rounded-lg border border-solid transition-colors flex items-center justify-between bg-background text-foreground",
  {
    variants: {
      size: {
        sm: "px-3 py-2 text-sm min-h-8",
        md: "px-4 py-2 text-base min-h-10",
        lg: "px-5 py-3 text-lg min-h-12",
      },
      variant: {
        default:
          "border-gray-300 hover:border-gray-400 focus:border-blue-500 focus:ring-2 focus:ring-blue-200",
        outline: "border-gray-300 bg-transparent hover:bg-gray-50",
        ghost: "border-transparent hover:bg-gray-100",
      },
    },
    defaultVariants: {
      size: "md",
      variant: "default",
    },
  }
);

interface SelectOption {
  value: string | number;
  label: string;
  disabled?: boolean;
}

interface SelectProps
  extends Omit<ComponentProps<"select">, "size">,
    VariantProps<typeof selectVariants> {
  options: SelectOption[];
  placeholder?: string;
  label?: string;
  error?: string;
  helperText?: string;
}

// Generated by Copilot
export const Select = ({
  options,
  placeholder,
  label,
  error,
  helperText,
  className,
  size,
  variant,
  ...props
}: SelectProps) => {
  return (
    <div className="w-full">
      {label && (
        <label className="block text-sm font-medium text-gray-700 mb-1">
          {label}
        </label>
      )}

      <select
        {...props}
        className={selectVariants({ size, variant, className })}
      >
        {placeholder && (
          <option value="" disabled>
            {placeholder}
          </option>
        )}
        {options.map((option) => (
          <option
            key={option.value}
            value={option.value}
            disabled={option.disabled}
          >
            {option.label}
          </option>
        ))}
      </select>

      {error && <p className="mt-1 text-sm text-red-600">{error}</p>}

      {helperText && !error && (
        <p className="mt-1 text-sm text-gray-500">{helperText}</p>
      )}
    </div>
  );
};
