"use client";

import { useState } from "react";

import { NoOptimizationList } from "../../../features/performance-comparison/components/NoOptimizationList";
import { UsageGuide } from "../../../features/performance-comparison/components/UsageGuide";
import { ContentVisibilityList } from "@/features/performance-comparison/components/ContentVisibilityList";
import { WindowedList } from "@/features/performance-comparison/components/WindowedList";

type TabType = "no-optimization" | "content-visibility" | "windowing";

const TABS = [
  {
    id: "no-optimization",
    label: "No Optimization",
    description: "Renders all items at once",
  },
  {
    id: "content-visibility",
    label: "CSS Content-Visibility",
    description: "Uses content-visibility: auto",
  },
  {
    id: "windowing",
    label: "Windowing Technique",
    description: "Virtual scrolling implementation",
  },
] as const;

// Generated by Copilot
export default function PerformanceComparisonPage() {
  const [activeTab, setActiveTab] = useState<TabType>("no-optimization");

  return (
    <div className="min-h-screen bg-background p-4">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-foreground mb-4">
            Performance Optimization Comparison
          </h1>
          <p className="text-gray-600 text-lg">
            Compare different techniques for handling large lists: No
            optimization vs CSS content-visibility vs Windowing
          </p>
        </div>

        {/* Tab Navigation */}
        <div className="flex flex-wrap gap-2 mb-6 border-b border-gray-200">
          {TABS.map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as TabType)}
              className={`px-4 py-2 text-sm font-medium rounded-t-lg transition-colors ${
                activeTab === tab.id
                  ? "bg-blue-500 text-white border-b-2 border-blue-500"
                  : "text-gray-600 hover:text-gray-800 hover:bg-gray-50"
              }`}
            >
              {tab.label}
            </button>
          ))}
        </div>

        {/* Tab Description */}
        <div className="mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
          <h3 className="font-semibold text-blue-900 mb-2">
            {TABS.find((tab) => tab.id === activeTab)?.label}
          </h3>
          <p className="text-blue-800">
            {TABS.find((tab) => tab.id === activeTab)?.description}
          </p>
        </div>

        {/* Performance Metrics */}
        <div className="mb-6 grid grid-cols-1 md:grid-cols-4 gap-4">
          <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
            <h4 className="font-semibold text-gray-900 mb-2">Total Items</h4>
            <p className="text-2xl font-bold text-blue-600">100,000</p>
          </div>
          <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
            <h4 className="font-semibold text-gray-900 mb-2">
              Current Technique
            </h4>
            <p className="text-lg font-medium text-purple-600">
              {TABS.find((tab) => tab.id === activeTab)?.label}
            </p>
          </div>
          <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
            <h4 className="font-semibold text-gray-900 mb-2">
              Expected Performance
            </h4>
            <p className="text-lg font-medium">
              {activeTab === "no-optimization" && (
                <span className="text-red-600">Poor ‚ö†Ô∏è</span>
              )}
              {activeTab === "content-visibility" && (
                <span className="text-yellow-600">Good ‚ö°</span>
              )}
              {activeTab === "windowing" && (
                <span className="text-green-600">Excellent üöÄ</span>
              )}
            </p>
          </div>
          <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
            <h4 className="font-semibold text-gray-900 mb-2">Memory Impact</h4>
            <p className="text-lg font-medium">
              {activeTab === "no-optimization" && (
                <span className="text-red-600">High</span>
              )}
              {activeTab === "content-visibility" && (
                <span className="text-yellow-600">Medium</span>
              )}
              {activeTab === "windowing" && (
                <span className="text-green-600">Low</span>
              )}
            </p>
          </div>
        </div>

        {/* Performance Tips */}
        <div className="mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
          <h4 className="font-semibold text-blue-900 mb-2">üí° How It Works</h4>
          <div className="text-blue-800 text-sm">
            {activeTab === "no-optimization" && (
              <div>
                <p className="mb-2">
                  <strong>Technique:</strong> Renders all 100000 items directly
                  in the DOM without any optimization.
                </p>
                <p className="mb-2">
                  <strong>Impact:</strong> Browser struggles with layout
                  calculations, painting, and event handling for thousands of
                  elements.
                </p>
                <p>
                  <strong>Result:</strong> Slow scrolling, high memory usage,
                  and poor user experience.
                </p>
              </div>
            )}
            {activeTab === "content-visibility" && (
              <div>
                <p className="mb-2">
                  <strong>Technique:</strong> Uses CSS{" "}
                  <code className="bg-white px-1 rounded">
                    content-visibility: auto
                  </code>{" "}
                  to skip rendering off-screen elements.
                </p>
                <p className="mb-2">
                  <strong>Impact:</strong> Browser skips layout and paint for
                  elements not in viewport, but elements still exist in DOM.
                </p>
                <p>
                  <strong>Result:</strong> Better performance than no
                  optimization, especially for long lists with complex content.
                </p>
              </div>
            )}
            {activeTab === "windowing" && (
              <div>
                <p className="mb-2">
                  <strong>Technique:</strong> Virtual scrolling - only renders
                  visible items (~20-30) and simulates scroll height.
                </p>
                <p className="mb-2">
                  <strong>Impact:</strong> Dramatically reduces DOM size, memory
                  usage, and browser work regardless of total items.
                </p>
                <p>
                  <strong>Result:</strong> Consistent performance whether you
                  have 100 or 100,000 items.
                </p>
              </div>
            )}
          </div>
        </div>

        {/* Content */}
        <div className="bg-white rounded-lg border border-gray-200 shadow-sm">
          {activeTab === "no-optimization" && <NoOptimizationList />}
          {activeTab === "content-visibility" && <ContentVisibilityList />}
          {activeTab === "windowing" && <WindowedList />}
        </div>

        {/* Usage Guide */}
        <UsageGuide activeTab={activeTab} />
      </div>
    </div>
  );
}
