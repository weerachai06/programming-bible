"use client";

import { useState } from "react";
import { Tabs } from "@/features/shared/components/tabs";
import { NoOptimizationList } from "../../../features/performance-comparison/components/NoOptimizationList";
import { UsageGuide } from "../../../features/performance-comparison/components/UsageGuide";
import { ContentVisibilityList } from "@/features/performance-comparison/components/ContentVisibilityList";
import { WindowedList } from "@/features/performance-comparison/components/WindowedList";

type TabType = "windowing" | "content-visibility" | "no-optimization";

const TABS = [
  {
    id: "windowing",
    label: "Windowing Technique",
    description:
      "Virtual scrolling implementation - Best performance for large datasets",
  },
  {
    id: "content-visibility",
    label: "CSS Content-Visibility",
    description:
      "Uses content-visibility: auto - Good performance optimization",
  },
  {
    id: "no-optimization",
    label: "No Optimization",
    description: "Renders all items at once - Poor performance reference",
  },
] as const;

// Generated by Copilot
export default function PerformanceComparisonPage() {
  const [activeTab, setActiveTab] = useState<TabType>("windowing");

  return (
    <div className="min-h-screen bg-background p-4">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-foreground mb-4">
            Performance Optimization Comparison
          </h1>
          <p className="text-gray-600 text-lg">
            Compare different techniques for handling large lists: Windowing vs
            CSS content-visibility vs No optimization
          </p>
        </div>

        {/* Tabs */}
        <Tabs
          tabs={TABS}
          activeTab={activeTab}
          onTabChange={(tabId) => setActiveTab(tabId as TabType)}
        >
          {/* Performance Metrics */}
          <div className="mb-6 grid grid-cols-1 md:grid-cols-4 gap-4">
            <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
              <h4 className="font-semibold text-gray-900 mb-2">Total Items</h4>
              <p className="text-2xl font-bold text-blue-600">100,000</p>
            </div>
            <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
              <h4 className="font-semibold text-gray-900 mb-2">
                Current Technique
              </h4>
              <p className="text-lg font-medium text-purple-600">
                {TABS.find((tab) => tab.id === activeTab)?.label}
              </p>
            </div>
            <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
              <h4 className="font-semibold text-gray-900 mb-2">
                Expected Performance
              </h4>
              <p className="text-lg font-medium">
                {activeTab === "windowing" && (
                  <span className="text-green-600">Excellent üöÄ</span>
                )}
                {activeTab === "content-visibility" && (
                  <span className="text-yellow-600">Good ‚ö°</span>
                )}
                {activeTab === "no-optimization" && (
                  <span className="text-red-600">Poor ‚ö†Ô∏è</span>
                )}
              </p>
            </div>
            <div className="p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
              <h4 className="font-semibold text-gray-900 mb-2">
                Memory Impact
              </h4>
              <p className="text-lg font-medium">
                {activeTab === "windowing" && (
                  <span className="text-green-600">Low</span>
                )}
                {activeTab === "content-visibility" && (
                  <span className="text-yellow-600">Medium</span>
                )}
                {activeTab === "no-optimization" && (
                  <span className="text-red-600">High</span>
                )}
              </p>
            </div>
          </div>

          {/* Performance Tips */}
          <div className="mb-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <h4 className="font-semibold text-blue-900 mb-2">
              üí° How It Works
            </h4>
            <div className="text-blue-800 text-sm">
              {activeTab === "windowing" && (
                <div>
                  <p className="mb-2">
                    <strong>Technique:</strong> Virtual scrolling - only renders
                    visible items (~20-30) and simulates scroll height.
                  </p>
                  <p className="mb-2">
                    <strong>Impact:</strong> Dramatically reduces DOM size,
                    memory usage, and browser work regardless of total items.
                  </p>
                  <p>
                    <strong>Result:</strong> Consistent performance whether you
                    have 100 or 100,000 items.
                  </p>
                </div>
              )}
              {activeTab === "content-visibility" && (
                <div>
                  <p className="mb-2">
                    <strong>Technique:</strong> Uses CSS{" "}
                    <code className="bg-white px-1 rounded">
                      content-visibility: auto
                    </code>{" "}
                    to skip rendering off-screen elements.
                  </p>
                  <p className="mb-2">
                    <strong>Impact:</strong> Browser skips layout and paint for
                    elements not in viewport, but elements still exist in DOM.
                  </p>
                  <p>
                    <strong>Result:</strong> Better performance than no
                    optimization, especially for long lists with complex
                    content.
                  </p>
                </div>
              )}
              {activeTab === "no-optimization" && (
                <div>
                  <p className="mb-2">
                    <strong>Technique:</strong> Renders all 100000 items
                    directly in the DOM without any optimization.
                  </p>
                  <p className="mb-2">
                    <strong>Impact:</strong> Browser struggles with layout
                    calculations, painting, and event handling for thousands of
                    elements.
                  </p>
                  <p>
                    <strong>Result:</strong> Slow scrolling, high memory usage,
                    and poor user experience.
                  </p>
                </div>
              )}
            </div>
          </div>

          {/* Content */}
          <div className="bg-white rounded-lg border border-gray-200 shadow-sm">
            {activeTab === "windowing" && <WindowedList />}
            {activeTab === "content-visibility" && <ContentVisibilityList />}
            {activeTab === "no-optimization" && <NoOptimizationList />}
          </div>

          {/* Usage Guide */}
          <UsageGuide activeTab={activeTab} />
        </Tabs>
      </div>
    </div>
  );
}
